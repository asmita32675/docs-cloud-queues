<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">
        
        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">
        
        <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
              
        <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Arrow_east.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
]>
<book  
    status="draft"
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" 
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:html="http://www.w3.org/1999/xhtml"    
    version="5.0-extension RaxBook-2.0"    
    xml:id="cq-devguide">
  <?rax canonical.url.base="http://docs.rackspace.com/queues/api/v1.0/cq-devguide/content"?>
  <?rax title.font.size="35px" subtitle.font.size="20px"?>
  <title>Rackspace Cloud Queues Developer Guide</title>
  <titleabbrev>Rackspace Cloud Queues Developer Guide</titleabbrev>
  <info>
    <author>
      <personname>
        <firstname/>
        <surname/>
      </personname>
      <affiliation>
        <orgname>Rackspace Cloud</orgname>
      </affiliation>
    </author>
    <copyright>
      <year>2013</year>
      <holder>Rackspace US, Inc.</holder>
    </copyright>
    <releaseinfo>API v1.0</releaseinfo>
    <productname>Rackspace Cloud Queues</productname><!--Note that the <productname> text matches the first few words of the title. The build system splits the title into productname + rest of title on the pdf cover.-->
    <pubdate/>
    <!--If you leave the <pubdate> element empty, the build system inserts today's date automatically. -->
    <legalnotice role="rs-api">
      <annotation>
        <remark>Copyright details are filled in by the build system.</remark>
      </annotation>
    </legalnotice>
    <abstract >
      <para>This document is intended for software developers
        interested in developing applications using the Rackspace
        Cloud Queues Application Programming Interface
          (<abbrev>API</abbrev>). </para>
    </abstract>  
 
    <revhistory>
      <revision>
        <date>2013-07-26</date>
        <revdescription>
          <itemizedlist>
            <listitem>
              <para>Initial Early Access release.</para>
            </listitem>
          </itemizedlist>
        </revdescription>
      </revision>
    </revhistory>

    <!-- 
       The values in raxm:metadata are used to control where the content appears on the landing page in docs.rackspace.com.
       Work with the Cloud Doc Tools team to find out what to put here. Once established, you should not change these
       values without first consulting with the CDT team.
    -->
      <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
        <raxm:displayname>API Developer Guide</raxm:displayname>
        <raxm:product version="v1.0">queues</raxm:product>
        <raxm:priority>20</raxm:priority>
      </raxm:metadata>
  </info>
  <chapter xml:id="overview">
    <title>Overview</title>
    <para linkend="OperatingModes-d1e588">Cloud Queues is an open
      source, scalable, and highly available message and notifications
      service. Users of this service can create and manage a
      producer-consumer or a publisher-subscriber model (<xref
        linkend="OperatingModes-d1e588"/>) from one simple API.
      Unlimited queues and messages give Cloud Queues users the
      flexibility they need to create powerful web applications in the
      cloud.</para>
    <para>Cloud Queues is made up of a few basic components: queues,
      messages, claims, and stats. In the producer-consumer model,
      users create queues where producers can post messages. Workers,
      or consumers, may then claim those messages and delete them once
      complete. A single claim may contain multiple messages, and
      administrators are given the ability to query claims for status. </para>
    <para>In the publisher-subscriber model, messages are posted to a
      queue like above, but messages are never claimed. Instead,
      subscribers, or watchers, simply send <command>GET</command>
      requests to pull all messages since their last request. In this
      model, a message will remain in the queue, unclaimed, until the
      message's time to live (TTL) has expired. </para>
    <para>In both of the models above, admininstrators can get queue
      stats that will display most recent and oldest messages, the
      number of unclaimed messages, and more. </para>
    <!--
    <para>Rackspace Cloud Queues is an API-based message and
      notification service. A message queueing service is a vital
      component of big, complex web applications. Cloud Queues is
      designed to fill this need. Cloud Queues is based on the
      OpenStack Marconi project. </para>
    <para>As you develop more complex web applications, you often have
      multiple servers set up to complete a set of tasks for that
      application. These tasks can be anything from creating users to
      deleting blocks of storage. Cloud Queues is a service that owns
      the lists of tasks, but not necessarily the order or workflow of
      the tasks. Many applications handle the workflow at a higher
      level.</para>
    <para>Cloud Queues creates an open alternative to the
      producer-consumer and the publish-subscribe (pub-sub) messaging
      patterns for use in applications that run on OpenStack clouds. </para>
    <para>The Cloud Queues API uses a modular architecture and
      supports unified pub-sub and job-queuing semantics. You can
      customize Cloud Queues to achieve a wide range of performance,
      durability, availability, and efficiency goals. </para>
    <para>Interactions with Cloud Queues occur programmatically via
      the Cloud Queues API as described in this developer
      guide.</para>
      -->
    <remark security="reviewer">Reviewer: Do you want to add a diagram
      of Cloud Queues infrastructure / architecture if you can give it
      to me. For an example, see the DB diagram at <link
        xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/overview.html"
        >
        http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/overview.html</link>.</remark> 
  <section xml:id="Intended_Audience-d1e166">
      <title>Intended Audience</title>
      <para>This document is intended for software developers who are
        interested in developing applications that use the Rackspace
        Cloud Queues API. We assume you have the following
        skills:</para>
      <itemizedlist>
        <listitem>
          <para>ReSTful web services</para>
        </listitem>
        <listitem>
          <para>HTTP/1.1 conventions</para>
        </listitem>
        <listitem>
          <para>JSON data serialization formats</para>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="Document_Change_History-d1e166">
      <title>Document Change History</title>
      <para>This version of the Developer Guide replaces and obsoletes
        all previous versions. The most recent changes are described
        in the table below:</para>
      <?rax revhistory?>
    </section>
    <section xml:id="Additional_Resources-d1e532">
      <title>Additional Resources</title>
      <!--
      <para>Description information about Cloud Queues is also
        published in its Web Application Description Language (WADL).
        You are welcome to read this information here:
        <link xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb.wadl">http://docs.rackspace.com/cdb/api/v1.0/cdb.wadl
        </link></para>
        -->
      <para>You can download the most current versions of other
        API-related documents from <link
          xlink:href="http://docs.rackspace.com/"
          >http://docs.rackspace.com/</link>.</para>
      <!--
      <para> For more details about Cloud Queues, refer to ??? (link
        to www.rackspace.com/cloud/queue???) . This site also offers
        links to Rackspace's official support channels, including
        knowledge base articles, forums, phone, chat, and
        email.</para>
      <remark security="reviewer">Reviewer: do you have a
        corresponding link for the Cloud Queues landing page on
        rackspace.com/cloud? If so, can you please give it to
        me?</remark>
        -->
      <para>Using the API document and your Rackspace Cloud account,
        you can get started whenever you'd like. See the
          <citetitle>Cloud Queues Getting Started Guide</citetitle>
        for information about getting started using the API. </para>
      <para>Email all support questions to:
          <email>cloudqueues@rackspace.com</email>. </para>
      <para>Please visit our <link
          xlink:href="http://feedback.rackspace.com/forums/71021-product-feedback/category/6841-cloud-sites"
          >Product Feedback Forum</link> and let us know what you
        think about Cloud Queues.</para>
      <para>You can follow Rackspace updates and announcements via
        twitter at: <link
          xlink:href="http://www.twitter.com/rackspace"
          >www.twitter.com/rackspace</link>. </para>
      <para>This API uses standard HTTP 1.1 response codes as
        documented at: <link
          xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
          >www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</link>.
      </para>
    </section>
    <section xml:id="API_Contract_Changes-d1e363">
      <title>API Contract Changes</title>
      <para>The API contract is not locked and may change during the
        Early Access Program.</para>
      <para>Rackspace will notify customers in Release Notes when and
        if the contract does change.</para>
    </section>
    <section xml:id="Pricing_SLA-d1e1362">
      <title>Pricing and Service Level</title>
      <para>During Early Access (EA), there is no charge for Cloud
        Queues. When Cloud Queues moves to unlimited availability
        (GA), customers will be billed for outbound bandwidth.</para>
      <para>While Cloud Queues is in EA, it is subject to the
        Rackspace test terms at <link
          xlink:href="http://www.rackspace.com/information/legal/testterms"
          >www.rackspace.com/information/legal/testterms</link>. When
        Cloud Queues moves to GA, the Service Level Agreement (SLA)
        will be available.</para>
    </section>
  </chapter>
  <chapter xml:id="Concepts-dle001">
    <title>Concepts</title>
    <para> To use the Cloud Queues API effectively, you should
      understand several key concepts: </para>
    <section xml:id="Site-d1e588">
      <title>Cloud Queues Workflow</title>
      <para>Here is an overview of the Cloud Queues workflow: </para>
      <orderedlist>
        <listitem>
          <para>You create a queue to which producers post
            messages.</para>
        </listitem>
        <listitem>
          <para>Producers post messages to the queue.</para>
        </listitem>
        <listitem>
          <para>Workers claim messages from the queue, complete the
            work in that message, and delete the message.</para>
          <para>If a worker plans to be offline before its message
            completes, the worker can retire the claim Time To Live
            (TTL), putting the message back into the queue for another
            worker to claim. </para>
        </listitem>
        <listitem>
          <para>Subscribers monitor the claims of these queues to keep
            track of activity and help troubleshoot if things go
            wrong. </para>
        </listitem>
      </orderedlist>
      <para>For the majority of use cases, Cloud Queues itself will
        not be responsible for the ordering of messages. If there is
        only a single producer, however, Cloud Queueing guarantees
        that messages are handled in a First In, First Out (FIFO)
        order. </para>
      <para>See the <xref linkend="glossary_1"/> for terms that are
        key to understanding how Cloud Queues works.</para>
    </section>
    <section xml:id="OperatingModes-d1e588">
      <title>Operating Modes</title>
      <para>Cloud Queues uses the operating modes described in the
        following sections. </para>
      <section xml:id="producer_consumer">
        <title>Producer-Consumer</title>
        <para>Characteristics of the Producer-Consumer mode
          are:</para>
        <itemizedlist>
          <listitem>
            <para>The worker acts on <emphasis role="italic">only one
                message</emphasis>.</para>
          </listitem>
          <listitem>
            <para>The worker must delete the message when work is
              done.</para>
          </listitem>
          <listitem>
            <para>TTL restores a message to an unclaimed state if the
              worker never finishes.</para>
          </listitem>
          <listitem>
            <para>This mode is ideal for dispatching jobs to multiple
              processors.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="publish_subscribe">
        <title>Publish-Subscribe</title>
        <para>Characteristics of the Publish-Subscribe mode
          are:</para>
        <itemizedlist>
          <listitem>
            <para>All subscribers listen to the messages in the queue.
            </para>
          </listitem>
          <listitem>
            <para>Messages are not claimed.</para>
          </listitem>
          <listitem>
            <para>Subscribers can send a marker/cursor to skip
              messages already seen. </para>
          </listitem>
          <listitem>
            <para>TTL eventually deletes messages. </para>
          </listitem>
          <listitem>
            <para>This mode is ideal for notification of events to
              multiple listeners at once.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
    <section xml:id= "cloud-queuing-actions-1">
      <title>Cloud Queues Requests</title>
      <para>This section provides a list of requests that are possible
        using the Cloud Queues API.</para>
      <section xml:id="queue-actions1" >
        <title>Queues</title>
        <para>The following requests are available for queues: </para>
        <itemizedlist>
          <listitem>
            <para>Create Queue</para>
          </listitem>
          <listitem>
            <para>List Queues</para>
          </listitem>
          <listitem>
            <para>Set Queue Metadata</para>
          </listitem>
          <listitem>
            <para>Get Queue Metadata</para>
          </listitem>
          <listitem>
            <para>Get Queue Stats</para>
          </listitem>
          <listitem>
            <para>Delete Queue</para>
          </listitem>
        </itemizedlist>
      </section>
        <section xml:id="message-actions">
          <title>Messages</title>
          <para>The following requests are available for
            messages:</para>
          <itemizedlist>
            <listitem>
              <para>Post Message(s)</para>
            </listitem>
            <listitem>
              <para>Get Messages</para>
            </listitem>
            <listitem>
              <para>Get a Specific Message</para>
            </listitem>
            <listitem>
              <para>Claim Messages</para>
            </listitem>
            <listitem>
              <para>Delete Message(s)</para>
            </listitem>
          </itemizedlist>
        </section>
      <section xml:id="claim-actions">
        <title>Claims</title>
        <para>The following requests are available for claims:</para>
        <itemizedlist>
          <listitem>
            <para>Query Claim</para>
          </listitem>
          <listitem>
            <para>Update Claim</para>
          </listitem>
          <listitem>
            <para>Release Claim</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
    <section xml:id="use_cases"> 
      <title>Use Cases</title>
      <para>Following are some possible use cases for Cloud
        Queues:</para>
      <itemizedlist>
        <listitem>
          <para> To distribute tasks among multiple workers
            (transactional job queues). </para>
        </listitem>
        <listitem>
          <para>To forward events to data collectors (transactional
            event queues).</para>
        </listitem>
        <listitem>
          <para>To publish events to any number of subscribers
            (publish-subscribe).</para>
        </listitem>
        <listitem>
          <para>To send commands to one or more agents (point-to-point
            or publish-subscribe).</para>
        </listitem>
        <listitem>
          <para>To request an action or get information from a Remote
            Procedure Call (RPC) agent.</para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>
  <chapter xml:id="Gen_API_Info-de01">
    <title>General API Information</title>
    <para>The Cloud Queues API is implemented using a ReSTful web
      service interface. Like other products in the Rackspace Cloud
      suite, Cloud Queues shares a common token-based authentication
      system that allows seamless access between products and
      services.</para>
    <note>
      <para>All requests to authenticate against and operate the
        service are performed using SSL over HTTP (HTTPS) on TCP port
        443.</para>
    </note>
    <section xml:id="Authentication-d1e647">
      <title>Authentication</title>
      <para> Every ReST request for Cloud Queues requires the
        inclusion of a specific authorization token, supplied by the
          <code>X-Auth-Token</code> HTTP header. Customers obtain this
        token by first using the Rackspace Cloud Authentication
        Service and supplying a valid username and API access key. </para>
      <section xml:id="Geographic_Endpoints">
        <title>Geographic Endpoints</title>
        <para> The Rackspace Cloud Authentication Service
          serves as the entry point to all Rackspace Cloud
          APIs and is itself a ReSTful web service. </para>
        <para> You can use either of the following endpoints
          to access the Authentication Service, regardless
          of US or UK identities: </para>
        <itemizedlist spacing="compact">
          <listitem>
            <para><link xlink:href="&ENDPOINT-US-20;"
              >&ENDPOINT-US-20;</link>
            </para>
          </listitem>
          <listitem>
            <para><link xlink:href="&ENDPOINT-UK-20;"
              >&ENDPOINT-UK-20;</link></para>
          </listitem>
        </itemizedlist>
        <para> Your account may be based in either the US or
          the UK; this is not determined by your physical
          location but by the location of the Rackspace
          retail site which was used to create your account: </para>
        <itemizedlist spacing="compact">
          <listitem>
            <para> If your account was created via <link
              xlink:href="http://www.rackspacecloud.com"
              >http://www.rackspacecloud.com</link>,
              it is a US-based account. </para>
          </listitem>
          <listitem>
            <para> If your account was created via <link
                xlink:href="http://www.rackspace.co.uk"
                >http://www.rackspace.co.uk</link>, it is a UK-based
              account.  </para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="Retrieving_Auth_Token">
        <title>Retrieving the Authentication Token</title>
        <informaltable rules="all">
          <tbody>
            <tr>
              <td colspan="1">&POST; </td>
              <td colspan="1"> v2.0/tokens </td>
              <td colspan="4"> Authenticate to receive a
                token and a service catalog. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara> Normal Response Code(s):
          <returnvalue>200</returnvalue>,
          <returnvalue>203</returnvalue>
        </simpara>
        <simpara> Error Response Code(s): unauthorized
          (<errorcode>401</errorcode>), userDisabled
          (<errorcode>403</errorcode>), badRequest
          (<errorcode>400</errorcode>), authFault
          (<errorcode>500</errorcode>),
          serviceUnavailable (<errorcode>503</errorcode>) </simpara>
        <para> The authenticate operation provides clients with an
          authentication token and a list of regional cloud endpoints.
          The sample requests and responses in this section illustrate
          a general case. In your authentication request, use your own
          credentials rather than the sample values shown here for
            <code>username</code> and <code>apiKey</code>. When you
          authenticate successfully, the response to your
          authentication request will include a catalog of the
          services to which you have subscribed rather than the sample
          values shown here. </para>
        <example>
          <title>Auth Request for US Endpoint: XML</title>
          <programlistingco>
            <areaspec>
              <area xml:id="credentials.xml.user"
                units="linecolumn" coords="13 17"/>
              <area xml:id="credentials.xml.key"
                units="linecolumn" coords="14 15"/>
            </areaspec>
            <programlisting language="xml">
<xi:include href="samples/credentials-20.xml" parse="text"/>
                    </programlisting>
          </programlistingco>
        </example>
        <example>
          <title>Auth Request for US Endpoint: JSON</title>
          <programlistingco>
            <areaspec>
              <area xml:id="credentials.json.user"
                units="linecolumn" coords="14 22"/>
              <area xml:id="credentials.json.key"
                units="linecolumn" coords="15 20"/>
            </areaspec>
            <programlisting language="json">
<xi:include href="samples/credentials-20.json" parse="text"/>
                    </programlisting>
          </programlistingco>
        </example>
        <calloutlist>
          <callout arearefs="credentials.xml.user">
            <para> The username supplied here is your
              common Rackspace Cloud username. </para>
          </callout>
          <callout arearefs="credentials.xml.key">
            <para> The key is your API access key. The key
              can be obtained from the Rackspace Cloud
              Control Panel in the <guimenu>&lt;Your
                Account></guimenu>/<guimenuitem>API
                  Access</guimenuitem> section (login
              here: <link
                xlink:href="http://mycloud.rackspace.com/"
                >Control Panel Login</link>). </para>
          </callout>
        </calloutlist>
        <example>
          <title>Auth Response for US Endpoint: XML</title>
          
          <programlistingco>
            <areaspec>
              <area xml:id="response.xml.namespaces" units="linecolumn" coords="7 9"/>
              <area xml:id="response.xml.token" units="linecolumn" coords="15 10"/>
              <area xml:id="response.xml.dfltregion" units="linecolumn" coords="16 67"/>
              <area xml:id="response.xml.role" units="linecolumn" coords="17 12"/>
              <area xml:id="response.xml.catalog" units="linecolumn" coords="22 21"/>
              <area xml:id="response.xml.servicetype" units="linecolumn" coords="51 34"/>
              <area xml:id="response.xml.servicename" units="linecolumn" coords="51 54"/>
              <area xml:id="response.xml.region" units="linecolumn" coords="52 30"/>
              <area xml:id="response.xml.tenant" units="linecolumn" coords="53 66"/>
              <area xml:id="response.xml.url" units="linecolumn" coords="54 9"/>
            </areaspec>
            <programlisting language="xml"><xi:include href="samples/auth-20.xml" parse="text"/></programlisting>
          </programlistingco>
        </example>
        
        
        <example xml:id="auth-response-example-json">
          <title>Auth Response for US Endpoint: JSON</title>
          
          <programlistingco>
            <areaspec>
              <area xml:id="response.json.namespaces" units="linecolumn" coords="200 1"/>
              <area xml:id="response.json.token" units="linecolumn" coords="9 8"/>
              <area xml:id="response.json.dfltregion" units="linecolumn" coords="16 45"/>
              <area xml:id="response.json.role" units="linecolumn" coords="17 12"/>
              <area xml:id="response.json.catalog" units="linecolumn" coords="30 8"/>
              <area xml:id="response.json.servicetype" units="linecolumn" coords="114 16"/>
              <area xml:id="response.json.servicename" units="linecolumn" coords="113 16"/>
              <area xml:id="response.json.region" units="linecolumn" coords="104 24"/>
              <area xml:id="response.json.tenant" units="linecolumn" coords="101 24"/>
              <area xml:id="response.json.url" units="linecolumn" coords="102 24"/>
            </areaspec>	
            <programlisting language="json"><xi:include href="samples/auth-20.json" parse="text"/>
                    </programlisting>
          </programlistingco>
        </example>
        <note>
          <para>The information shown in the Auth Response
            examples is for US-based accounts. If you
            authenticate against the UK-endpoint for auth,
            you will see the service catalog information
            for UK-based accounts.</para>
        </note>
        <calloutlist>
          <callout arearefs="response.xml.namespaces">
            <para>
              In XML responses only,
              a list of namespaces identifies API extensions that add functionality to the core API.
            </para>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.token">
            <para> This token can be presented to a service as evidence of authentication.
              Tokens are valid for a finite duration; a token's default lifespan is twenty-four hours.
            </para>
            <para> The token's <code>expires</code> attribute denotes the time
              after which the token will automatically become
              invalid. A token may be manually revoked before
              the time identified by the <code>expires</code>
              attribute; <code>expires</code> predicts a token's
              maximum possible lifespan but does not guarantee
              that it will reach that lifespan. Clients are
              encouraged to cache a token until it expires. </para>
            <note>
              <para>The token's expiration time is
                formatted differently in the US and
                UK. These response examples show the
                US format. For examples of the UK
                format please refer to <link
                  xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_authenticate_v2.0_tokens_.html"
                  >http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_authenticate_v2.0_tokens_.html</link>.</para>
            </note>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.dfltregion">
            <para> Users can be assigned a default region so that, when there is a 
              choice between multiple endpoints associated with a service in the 
              user's catalog, the endpoint for the user's default region will be 
              selected if it is available. In this example, the user's default 
              region is DFW and several of the services in the user's catalog 
              offer endpoints in that region and the ORD region; this user's work 
              will be directed to the DFW region whenever possible.
            </para>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.role">
            <para> Users can be assigned multiple roles,
              with each role providing specific
              privileges. In this example,
              <code>jsmith</code> is the
              administrative user for the account,
              holding the fully-privileged
              <code>identity:admin</code> role.
              Other users might hold other roles with
              different privileges. Roles need not be
              associated with actual job functions such
              as Administrator, Operator, Developer,
              Tester, or Trainer. </para>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.catalog">
            <para> The service catalog lists the services
              this user can access. In this example, the
              user can access one database service, one
              loadbalancing service, two compute
              services (Cloud Servers OpenStack and
              Cloud Servers), two object storage
              services (Cloud Files Content Distribution
              Network (CDN), and Cloud Files),  and one
              DNS service. The catalog listing for each
              service provides at least one endpoint URL
              for that service. Other information, such
              as regions, versions, and tenants, is
              provided if it's relevant to this user's
              access to this service. </para>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.servicetype">
            <para>
              The service type attribute identifies services that perform similar functions, whatever those services might be named.
              In this example, the services named cloudServers and cloudServersOpenstack are both identified as <code>type="compute"</code>,
              identifying them as compute services even though the word "compute" does not appear in their names.
            </para>
            <important>
              <para>Use service type as the primary value for
                locating a service. If multiple endpoints of the
                same service type exist in the same region, use
                service name as the tiebreaker.</para>
            </important>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.servicename">
            <para>
              The service name attribute identifies each unique service in the catalog.
              Once a service is created, its name does not change. However, new services of the same service type may be added to the catalog with new names.
            </para>
            <important>
              <para> If you are programmatically parsing an authentication
                response, use service type rather than service name as
                the basis for determining whether a user has access to
                a particular kind of service. Service type is stable
                across all releases; new service types may be developed,
                but existing service types are not renamed.
                In this example,
                <code>type="compute"</code> identifies all the
                available compute services, one of which is named
                cloudServers and one of which is named
                cloudServersOpenStack. New compute service names may be added
                in future releases; whatever the compute services are
                named, you can always
                recognize them by parsing for
                <code>type="compute"</code> in the authentication
                response's service catalog. </para>
            </important>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.region">
            <para> A service may expose endpoints in different regions.
              Regional endpoints allow clients to provision
              resources in a manner that provides high
              availability. </para>
            <para> Some services are not region-specific. These services supply a single
              non-regional endpoint and do not provide access to internal URLs. </para>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.tenant">
            <para> Some services recognize specification of a tenant. If a
              service does recognize tenants, the format of the
              tenant specification is defined only by the
              service; for details about whether and how to
              specify a tenant, check the documentation for the
              service you are using.</para>
            <para> </para>
          </callout>
          <callout arearefs="response.xml.url">
            <para>
              An endpoint can be assigned public and internal URLs. A
              public URL is accessible from anywhere. Access to a public
              URL usually incurs traffic charges. Internal URLs are only
              accessible to services within the same region. Access to
              an internal URL is free of charge.
            </para>
            <para> </para>
          </callout>
        </calloutlist>
        <para>Authentication tokens are typically valid for 24
          hours. Applications should be designed to
          re-authenticate after receiving a 401
          (Unauthorized) response from a service endpoint. </para>
        <important>
          <para>If you are programmatically parsing an
            authentication response, please be aware that
            service names are stable for the life of the
            particular service and can be used as keys.
            You should also be aware that a user's service
            catalog can include multiple uniquely-named
            services which perform similar functions. For
            example, cloudServersOpenStack is the
            OpenStack version of compute whereas
            cloudServers is the legacy version of compute;
            the same user can have access to both
            services. In Auth 2.0, the service type
            attribute can be used as a key by which to
            recognize similar services; see the tip
            below.</para>
        </important>
        <tip>
          <para>Beginning with Auth 2.0, the service catalog
            includes a service type attribute to identify
            services that perform similar functions but
            have different names; for example,
            <code>type="compute"</code> identifies
            compute services such as cloudServers and
            cloudServersOpenStack. Some developers have
            found the service type attribute to be useful
            in parsing the service catalog. For additional
            information on Auth 2.0 (also known as the
            Cloud Identity Service), refer to the
            <citetitle>Cloud Identity Client Developer
              Guide</citetitle> at <link
                xlink:href="http://docs.rackspace.com"
                >http://docs.rackspace.com/</link>.</para>
        </tip>
        <para>Databases service endpoints are published in the
          service catalog in the Auth response with the
          account number, which is a required element of the
          service endpoints. The examples shown here are for
          authentication for US customers. Customers with
          UK-based accounts will see different values in the
          service catalog. Refer to the next section for
          more information about service endpoints. </para>  
      </section>  </section>
    <section xml:id="serviceEndpoints">
      <title>Service Access/Endpoints</title>
      <para/>
      <para>Cloud Queues is a regionalized service. The user of the
        service is therefore responsible for appropriate replication,
        caching, and overall maintenance of Cloud Queues data across
        regional boundaries to other Cloud Queues servers.</para>
      <para>You can find the available service access/endpoints for
        Cloud Queues summarized in the table below.</para>
      <?rax-fo keep-with-next?>
      <para>
        <table rules="all">
          <caption>Regionalized Service Endpoints</caption>
          <thead>
            <tr align="center">
              <td colspan="2">Region</td>
              <td colspan="5">Endpoint</td>
            </tr>
          </thead>
          <tbody>
            <tr align="left">
              <td colspan="2" rowspan="2">Chicago (ORD)</td>
              <td colspan="5"
                  ><code>https://ord.queue.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/ </td>
            </tr>
            <tr>
              <td colspan="5"
                  ><code>https://ord-snet.queue.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/</td>
            </tr>
            <tr align="left">
              <td colspan="2" rowspan="2">London (LON)</td>
              <td colspan="5"
                  ><code>https://lon.queue.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/ </td>
            </tr>
            <tr>
              <td colspan="5"
                  ><code>https://lon-snet.queue.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/
              </td>
            </tr>
          </tbody>
        </table>
      </para>
      <para>Replace the sample account ID number,
          <parameter>1234</parameter>, with your actual account number
        returned as part of the authentication service
        response.</para>
      <para>You will find the actual account number after the final
        '/' in the <code>publicURL</code> field returned by the
        authentication response. For example, in <xref
          linkend="auth-response-example-json"/> you can see from the
          <code>publicURL</code> field for <code>cloudServers</code>
          ("https://servers.api.rackspacecloud.com/v1.0/<emphasis
          role="bold">1100111</emphasis>") that the account number is
        1100111. </para>
      <note>
        <para>Account ID refers to your Rackspace account number,
          which you can also find in your Cloud Control Panel at <link
            xlink:href="https://mycloud.rackspace.com/"
            >mycloud.rackspace.com</link>.</para>
      </note>
    </section>
    <section xml:id="contractVersion">
      <title>Cloud Queues Contract Version</title>
      <para> The Cloud Queues version defines the contract and build
        information for the API. </para>
      <para> The contract version denotes the data model and behavior
        that the API supports. The requested contract version is
        included in all request URLs. Different contract versions of
        the API may be available at any given time and are not
        guaranteed to be compatible with one another. </para>
      <example>
        <title>Example Request URL (contract version in <emphasis
            role="strong">bold</emphasis>)</title>
        <programlisting>https://ord.queuing.api.rackspacecloud.com/<emphasis role="strong">v1.0</emphasis>/1234</programlisting>
      </example>
      <note>
        <para>This document pertains to contract version 1.0.</para>
      </note>
    </section>
    <section xml:id="Request_Response_Types-d1e903">
      <title>Request/Response Types</title>
      <para>The Cloud QueuesAPI supports JSON data serialization
        formats. The request format is specified using the
          <code>Content-Type</code> header and is <emphasis
          role="italic">required</emphasis> for calls that have a
        request body. The response format can be specified in requests
        either by using the <code>Accept</code> header or by adding a
          <code>.json</code> extension to the request URI. JSON is
        also used for the response format.</para>
      <table rules="all">
        <caption>Response Format</caption>
        <?dbfo keep-together="always"?>
        <thead>
          <tr align="center">
            <td>Format</td>
            <td>Accept Header</td>
            <td>Query Extension</td>
            <td>Default</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>JSON</td>
            <td>application/json</td>
            <td>.json</td>
            <td>Yes</td>
          </tr>
        </tbody>
      </table> 
    </section>
    <?hard-pagebreak?>
    <section xml:id="Limits-d1e1208">
      <title>Limits</title>
      <remark>Reviewer: Do you need both Rate Limits and Absolute
        Limits for Cloud Queues... the section below was pulled from
        Cloud Databases.</remark>
      <para>
        All accounts, by default, have a preconfigured set of
        thresholds (or limits) to manage capacity and prevent
        abuse of the system.  The system recognizes two kinds
        of limits: <firstterm>rate limits</firstterm> and
        <firstterm>absolute limits</firstterm>. Rate limits
        are thresholds that are reset after a certain amount
        of time passes. Absolute limits are fixed.
      </para>
      <section xml:id="Rate_Limits-d1e1222">
        <title>Rate Limits</title>
        <para> Rate limits are specified in terms of both a
          human-readable wild-card URI and a
          machine-processable regular expression. The
          regular expression boundary matcher '^' takes
          effect after the root URI path. For example, the
          regular expression ^/v1.0/instances would match
          the bolded portion of the following URI:
          https://ord.databases.api.rackspacecloud.com<emphasis
            role="bold">/v1.0/instances</emphasis>. </para>
        <para>The following table specifies the default rate
          limits for all API operations for all &GET;,
          &POST;, &PUT;, and &DELETE; calls for databases
          and database instances: </para>
        <table rules="all">
          <caption>Default Rate Limits</caption>
          <thead>
            <tr align="center">
              <td colspan="1">Verb</td>
              <td colspan="2">URI</td>
              <td colspan="2">RegEx</td>
              <td colspan="1">Default</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td colspan="1">&GET; changes-since</td>
              <td colspan="2">*/instances/*</td>
              <td colspan="2">^/vd+.d+/instances.*</td>
              <td colspan="1">3/minute</td>
            </tr>
            <tr>
              <td colspan="1">&POST;</td>
              <td colspan="2">*/instances/*</td>
              <td colspan="2">^/vd+.d+/instances.*</td>
              <td colspan="1">10/minute</td>
            </tr>
            <tr>
              <td colspan="1">&POST; instances</td>
              <td colspan="2">*/instances/*</td>
              <td colspan="2">^/vd+.d+/instances.*</td>
              <td colspan="1">50/day</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="2">*/instances/*</td>
              <td colspan="2">^/vd+.d+/instances.*</td>
              <td colspan="1">10/minute</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="2">*/instances/*</td>
              <td colspan="2">^/vd+.d+/instances.*</td>
              <td colspan="1">100/minute</td>
            </tr>
          </tbody>
        </table>
        <para> Rate limits are applied in order relative to the
          verb, going from least to most specific. For
          example, although the threshold for &POST; to
          /v1.0/* is 10 per minute, one cannot &POST; to
          /v1.0/* more than 50 times within a single day. </para>
        <para> If you exceed the thresholds established for
          your account, a <errorcode>413 (Rate
            Control)</errorcode> HTTP response will be
          returned with a <code>Retry-After</code> header to
          notify the client when it can attempt to try
          again. </para>
      </section>
      <section xml:id="Absolute_Limits-d1e1397">
        <title>Absolute Limits</title>
        <remark>Reviewer: Need to update this entire section.
          Please give me your updates.</remark>
        <para>Refer to the following table for the absolute
          limits that are set.</para>
        <table rules="all">
          <caption>Absolute Limits</caption>
          <thead>
            <tr>
              <td colspan="1">Name</td>
              <td colspan="3">Description</td>
              <td colspan="1">Limit</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td colspan="1"/>
              <td colspan="3">Maximum number of ??? allowed for your
                account</td>
              <td colspan="1"/>
            </tr>
            <tr>
              <td colspan="1"/>
              <td colspan="3">Maximum volume of ??? size per instance
                in gigabytes (GB) for your account</td>
              <td colspan="1"/>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
    <section xml:id="commonHeaders" >
      <title>Common Headers</title>
      <para>Each request to the  Cloud Queues API must include certain
        standard and extended HTTP headers. These headers provide
        host, agent, authentication, and other pertinent information
        to the server.</para>
      <table rules="all">
        <caption>Common Headers</caption>
        <col width="30%"/>
        <col width="70%"/>
        <thead>
          <tr>
            <th>Header</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Host</td>
            <td>Host name of the API</td>
          </tr>
          <tr>
            <td>Date</td>
            <td>Current date and time</td>
          </tr>
          <tr>
            <td>Accept</td>
            <td>Media type desired; initially, only
                <code>application/json</code> is supported</td>
          </tr>
          <tr>
            <td>Accept-Encoding</td>
            <td>Specifies that the agent accepts gzip-encoded response
              bodies</td>
          </tr>
          <tr>
            <td>Content-Type</td>
            <td><code>application/json</code>
            </td>
          </tr>
          <tr>
            <td>Content-Length</td>
            <td>For <command>POST</command> or <command>PUT</command>
              requests, the length in bytes of the message document
              being submitted</td>
          </tr>
          <tr>
            <td>X-Auth-Token</td>
            <td>Auth token</td>
          </tr>
          <tr>
            <td>X-Project-ID</td>
            <td>An ID for a project to which the value of X-Auth-Token
              grants access. Queues will be created under this
              project.</td>
          </tr>
          <tr>
            <td>Client-ID</td>
            <td>A unique ID for each client instance. This is used to
              avoid echoing a sender's messages back tot he same
              instance and my be logged by the server for furture use.
              Client-ID is generated once and persists between
              restarts of the client.</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section xml:id="datetimeformat">
      <title>Date/Time Format</title>
      <para> The Cloud Queues service uses an ISO-8601 compliant date
        format for the display and consumption of date/time values. </para>
      <example>
        <title>Service Date/Time Format</title>
        <programlisting>yyyy-MM-dd'T'HH:mm:ss.SSSZ</programlisting>
        <para>See the table below for a description of the date/time format codes.</para>
        <para>May 19th, 2013 at 8:07:08 AM, GMT-5 would have the
          following format:</para>
        <programlisting>2013-05-19T08:07:08-05:00</programlisting>
      </example>
      <table rules="all">
        <caption>Explanation of Date/Time Format Codes</caption>
        <thead>
          <tr>
            <td>Code</td>
            <td>Description</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>yyyy</td>
            <td>Four digit year</td>
          </tr>
          <tr>
            <td>MM</td>
            <td>Two digit month</td>
          </tr>
          <tr>
            <td>dd</td>
            <td>Two digit day of month</td>
          </tr>
          <tr>
            <td>T</td>
            <td>Separator for date/time</td>
          </tr>
          <tr>
            <td>HH</td>
            <td>Two digit hour of day (00-23)</td>
          </tr>
          <tr>
            <td>mm</td>
            <td>Two digit minutes of hour</td>
          </tr>
          <tr>
            <td>ss</td>
            <td>Two digit seconds of the minute</td>
          </tr>
          <tr>
            <td>SSS</td>
            <td>Three digit milliseconds of the second</td>
          </tr>
          <tr>
            <td>Z</td>
            <td>RFC-822 timezone</td>
          </tr>
        </tbody>
      </table>
      
    </section>
    <section xml:id="faults-dle101">
      <title>Faults</title>
      <para>If any Cloud Queues request results in an error, the
        queuing service returns an appropriate 4xx or 5xx HTTP status
        code, as well as the following information in the body: </para>
      <itemizedlist>
        <listitem>
          <para>Title</para>
        </listitem>
        <listitem>
          <para>Description</para>
        </listitem>
        <listitem>
          <para>Internal code</para>
        </listitem>
        <listitem>
          <para>Link to more information</para>
        </listitem>
      </itemizedlist>
      <para>An example of an error message follows. </para>
      <example>
        <title>Error Message Example</title>
        <programlisting>HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "title": "Unsupported limit",
  "description": "The given limit cannot be negative, and cannot be greater than 50.",
  "code": 1092,
  "link": {
    "rel": "help",
    "href": "http://docs.example.com/messages#limit",
    "text": "API documentation for the limit parameter"
  }
}</programlisting>
      </example>
      <para>Error information for each operation is included with the
        description in <xref linkend="API_Operations_dle001"/>.</para>
    </section> 
  </chapter>
  <chapter xml:id="API_Operations_dle001" 
    xmlns="http://docbook.org/ns/docbook"
    role="api-reference">
    <title>API Operations</title>
    <para>This chapter describes each of the Cloud Queues operations. </para>
    <note>
      <para>When used in the Cloud Queues API operations,
          <code>queue_name</code> is the name of the queue. The name
        MUST NOT exceed 64 bytes in length, and is limited to US-ASCII
        letters, digits, underscores, and hyphens. </para>
    </note>
    <section xml:id="queue-operations-dle001">
      <title>Queues </title>
      <para>This section describes queue requests that are supported
        by the Cloud Queues API.  </para>
      <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <wadl:resource href="../../src/wadl/cq-devguide.wadl#queues">
          <wadl:method href="listQueues"/>
        </wadl:resource>
        <wadl:resource href="../../src/wadl/cq-devguide.wadl#queue"/>
        <wadl:resource href="../../src/wadl/cq-devguide.wadl#metadata"/>        
        <wadl:resource href="../../src/wadl/cq-devguide.wadl#stats"/>
      </wadl:resources>
    </section>
    <section xml:id="message-operations-dle001" >
      <title>Messages </title>
      <para>This section describes message requests that are supported
        by the Cloud Queues API. </para>
      <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">     
        <wadl:resource href="../../src/wadl/cq-devguide.wadl#messages"/>
        <wadl:resource href="../../src/wadl/cq-devguide.wadl#message"/>  
      </wadl:resources>
    </section>
    <section xml:id="claims-operations-dle001" >
      <title>Claims </title>
      <para>This section describes claim requests that are supported
        by the Cloud Queues API. </para>
      <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <wadl:resource href="../../src/wadl/cq-devguide.wadl#claims"/>
          <wadl:resource href="../../src/wadl/cq-devguide.wadl#claim"/>  
      </wadl:resources>
 </section>
 </chapter>



    
  <glossary xml:id="glossary_1" >
    <title>Glossary</title>
    <info>
      <raxm:metadata
        xmlns:raxm="http://docs.rackspace.com/api/metadata">
        <raxm:type>concept</raxm:type>
        <raxm:product version="v1.0">cdns</raxm:product>
        <raxm:priority>50</raxm:priority>
      </raxm:metadata>
    </info>
    <glossentry >
      <glossterm>Claim</glossterm>
      <glossdef>
        <para> A worker claims or checks out a message to perform a
          task. Doing so prevents other workers from attempting to
          perform the same task.</para>
      </glossdef>
    </glossentry>
    <glossentry xml:id="message-d1e016">
      <glossterm>Message</glossterm>
      <glossdef>
        <para>A message is a task, a notification, or anything else
          that gets posted to the queue.</para>
      </glossdef>
    </glossentry>
    <glossentry xml:id="producer-d1e020">
      <glossterm>Producer</glossterm>
      <glossdef>
        <para>A producer is a server that sends messages to the
          queue.</para>
      </glossdef>
    </glossentry>
    <glossentry xml:id="queue-d1e019">
      <glossterm>Queue</glossterm>
      <glossdef>
        <para>A queue holds messages.</para>
      </glossdef>
    </glossentry>
    <glossentry xml:id="subscriber-d1e018">
      <glossterm>Subscriber</glossterm>
      <glossdef>
        <para>A subscriber (or observer) watches messages like an RSS
          feed, but does not claim any messages.</para>
      </glossdef>
    </glossentry>
    <glossentry xml:id="worker-d1e018">
      <glossterm>Worker</glossterm>
      <glossdef>
        <para>A worker is a server that claims a messages and performs
          the necessary task.</para>
      </glossdef>
    </glossentry>
  </glossary>
</book>
